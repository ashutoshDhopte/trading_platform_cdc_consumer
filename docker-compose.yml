services:
  db:
    image: postgres:15-alpine # Using version 15, alpine for smaller size
    restart: always
    environment:
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_password
      POSTGRES_DB: trading_db
    ports:
      - "5432:5432" # Exposes Postgres to your host machine on port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persists data
    command: postgres -c wal_level=logical

  zookeeper:
    image: debezium/zookeeper:2.1
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    image: debezium/kafka:2.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL

  connect: # This is the Debezium service
    image: debezium/connect:2.1
    ports:
      - "8083:8083"
    links:
      - kafka
      - db
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses

  cdc-consumer:
    build:   /home/ubuntu/trading_platform_cdc_consumer
    restart: always
    links:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      # Update this to your deployed Render backend's public URL
      - MAIN_BACKEND_BROADCAST_URL=https://trading-platform-backend-6w4v.onrender.com/internal/broadcast
    depends_on:
      - connect

volumes:
  postgres_data: # Defines the named volume